# 网卡
nic: 'ens32'            # 修改为实际内网网卡名，如eth0

# set bypass_folder_warn variable for warn custom filter plugin
#bypass_folder_warn: "Folder check bypass enabled, make sure you know what you are doing"

# 安装包目录 
software_dir: '/root/my/ica-package'       # 离线安装包路径，根据实际情况需修改
tmp_dir: '/opt/src/tmp/ica-ansible'      # 安装所需安装包临时目录

################################################################################
# nginx
nginx_work_dir: '/usr/local/nginx' # nginx安装目录
nginx_install_user: 'nginx'
nginx_version: '1.22.1'

# keepalived
keepalived_work_dir: '/usr/local/keepalived' # keepalived安装目录
keepalived_version: '2.2.7'
vip: '192.168.133.250'  # 高可用keepalived的虚拟IP

######################################################################
# mysql
mysql_work_dir: '/usr/local/mysql'  # mysql安装目录
mysql_install_user: 'mysql'
mysql_version: '8.0.28'
mysql_port: '3306'
mysql_root_passwd: 'Admin@2024'
repl_user: 'repl'
repl_passwd: 'Repl@2024'
master_ip: '192.168.133.151'  # mysql master的IP

######################################################################
# jdk
jdk_path: '/usr/local'
jdk_work_dir: 'jdk1.8.0_151'  # jdk1.8.0_141
jdk_version: 'jdk-8u151-linux-x64.tar.gz' # jdk-8u141-linux-x64.tar.gz
jdk_link: 'java'

# maven
maven_install_path: '/usr/local'
maven_version: '3.6.3'
maven_link: 'maven'

######################################################################
# docker
docker_version: '24.0.6'
docker_json_dir: '/etc/docker'

# docker-dompose
docker_compose_version: '2.24.6'
docker_compose_bindir: '/usr/local/bin'
docker_compose_link: 'docker-compose'

######################################################################
# zookeeper
zookeeper_version: '3.5.10'
zookeeper_install_path: '/opt'
zookeeper_data_dir: '/data/zookeeper'
zookeeper_link: 'zookeeper'
# zookeeper内网连接地址：192.168.133.151:2181,192.168.133.152:2181,192.168.133.153:2181

# kafka or kafka kraft
kafka_version: '3.6.0'  # 2.6.0. If you use kafka kraft mode deployment, the kafka version needs to be >= 2.8
kafka_install_path: '/opt'
kafka_data_dir: '/data/kafka'
kafka_link: 'kafka'
password: '123456'
domain_name: 'my.com'
hostname: 'kafka'
# 证书文件位置：ansible主机/usr/certificates/kafka目录下
# kafka公网连接地址：kafka：kafka.my.com:21090,kafka.my.com:21091,kafka.my.com:21092
# kafka内网连接地址：192.168.133.151:9092,192.168.133.152:9092,192.168.133.153:9092

######################################################################
# prometheus，web ui默认端口号9090
prometheus_version: '2.45.5'
prometheus_install_path: '/opt'
prometheus_link: 'prometheus'
prometheus_install_user: 'prometheus'
prometheus_data_dir: '/data/prometheus'

# node_exporter
node_exporter_port: '9100'    # 端口号
node_exporter_version: '1.8.0'
node_exporter_install_path: '/opt'
node_exporter_link: 'node_exporter'
node_exporter_install_user: 'prometheus'

# alertmanager，web ui默认端口号9093
alertmanager_version: '0.27.0'
alertmanager_install_path: '/opt'
alertmanager_link: 'alertmanager'
alertmanager_install_user: 'prometheus'
alertmanager_data_dir: '/data/alertmanager'

######################################################################
# elasticsearch，默认端口号9200
elasticsearch_port: '9200'    # 端口号
elasticsearch_version: '7.17.21'
elasticsearch_install_path: '/opt'
elasticsearch_link: 'elasticsearch'
elasticsearch_install_user: 'elasticsearch'
elasticsearch_data_dir: '/data/elasticsearch'
elasticsearch_Xms: '256m'
elasticsearch_Xmx: '256m'
elasticstack_password: '123456'

# kibana，默认端口号5601
kibana_port: '5601'    # 端口号
kibana_version: '7.17.21'
kibana_install_path: '/opt'
kibana_link: 'kibana'
kibana_install_user: 'kibana'

# filebeat
filebeat_version: '7.17.21'
filebeat_install_path: '/opt'
filebeat_link: 'filebeat'

# logstash
logstash_version: '7.17.21'
logstash_install_path: '/opt'
logstash_link: 'logstash'

######################################################################

# harbor
harbor_version: '2.11.0'
harbor_http_port: '180'
harbor_external_url: 'harbor.my.com'
harbor_admin_password: 'Admin2024$%'
harbor_db_password: 'root123456'
harbor_data_volume: '/data/harbor'
harbor_install_path: '/opt'
harbor_data_dir: '/data/harbor'

# gitlab-runner
docker_compose_v: '3'   # 3.8，默认2
# gitlab_runner_instance_num: 2   # 一个主机启动多少个gitlab runner实例
gitlab_runner_instance: ["group-oms", "group-test"]   # 一个主机启动gitlab runner实例名列表，配置文件持久化到目录/opt/gitlab-runner/gitlab-runner-[实例名]
gitlab_runner_install_path: '/opt/gitlab-runner'
gitlab_runner_service_name: 'gitlab-runner'
gitlab_runner_image: 'gitlab/gitlab-runner:v14.6.0'   # 'bitnami/gitlab-runner:16.10.0-debian-12-r2'


######################################################################