---
- name: debug package variable
  debug:
    var: package

- name: "1、创建临时目录"
  file: dest={{ tmp_dir }} state=directory

- name: "2、拷贝kafka二进制包"
  copy: src={{ software_dir }}/kafka_2.13-{{ kafka_version }}.tgz dest={{ tmp_dir }}
  when: hostvars[inventory_hostname]['package'] == "true"

- name: "2、下载kafka二进制包"
  get_url:
    url: "https://archive.apache.org/dist/kafka/{{ kafka_version }}/kafka_2.13-{{ kafka_version }}.tgz"
    validate_certs: false
    dest: "{{ tmp_dir }}"
    mode: "0644"
    force: true
  when: hostvars[inventory_hostname]['package'] == "false"

- name: "3、解压kafka二进制包"
  unarchive: src={{ tmp_dir }}/kafka_2.13-{{ kafka_version }}.tgz dest={{ tmp_dir }}

- name: "4、移动kafka目录"
  command: mv {{ tmp_dir }}/kafka_2.13-{{ kafka_version }} {{ kafka_install_path }}/kafka_2.13-{{ kafka_version }}

- name: "5、创建数据目录"
  file: dest={{ item }} state=directory
  with_items:
    - "{{ kafka_data_dir }}/kafkadata-{{ hostvars[inventory_hostname]['brokerid'] }}"
    - "{{ kafka_install_path }}/kafka_2.13-{{ kafka_version }}/logs"
    - "{{ kafka_install_path }}/kafka_2.13-{{ kafka_version }}/plugins"
    - "{{ kafka_install_path }}/kafka_2.13-{{ kafka_version }}/ssl"

- name: "6、生成server.properties配置文件"
  template:
    src: "server.properties.j2"
    dest: "{{ kafka_install_path }}/kafka_2.13-{{ kafka_version }}/config/server.properties"

- name: "7、生成集群启停脚本kafka.sh"
  template:
    src: "kafka.sh.j2"
    dest: "{{ kafka_install_path }}/kafka_2.13-{{ kafka_version }}/bin/kafka.sh"
    mode: 0755

- name: "8、生成集群检查脚本jps-callsh"
  template:
    src: "jps-call.sh.j2"
    dest: "{{ kafka_install_path }}/kafka_2.13-{{ kafka_version }}/bin/jps-call.sh"
    mode: 0755

- name: "9、拷贝证书"
  copy:
    src: "/usr/certificates/kafka/{{ item }}"
    dest: "{{ kafka_install_path }}/kafka_2.13-{{ kafka_version }}/ssl"
  with_items:
    - server.keystore.jks
    - server.truststore.jks

- name: "10、创建kafka链接文件"
  file:
    src: "{{ kafka_install_path }}/kafka_2.13-{{ kafka_version }}"
    dest: "{{ kafka_install_path }}/{{ kafka_link }}"
    state: link

- name: "11、启动kafka集群"
  shell: "export JAVA_HOME={{ jdk_path }}/{{ jdk_link }} && {{ kafka_install_path }}/{{ kafka_link }}/bin/kafka-server-start.sh -daemon {{ kafka_install_path }}/{{ kafka_link }}/config/server.properties"
  register: kafka_msg

- name: "12、打印启动信息"
  ansible.builtin.debug:
    var: kafka_msg  #.stdout_lines
  changed_when: false

